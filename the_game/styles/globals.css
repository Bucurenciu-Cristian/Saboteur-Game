html,
body {
    padding: 0;
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans,
    Helvetica Neue, sans-serif;
}

a {
    color: inherit;
    text-decoration: none;
}

* {
    box-sizing: border-box;
}

@media (prefers-color-scheme: dark) {
    html {
        color-scheme: dark;
    }

    body {
        color: white;
        background: gray;
    }
}

body {
    font: 14px 'Century Gothic', Futura, sans-serif;
    margin: 20px;
}

ol,
ul {
    padding-left: 30px;
}

.board-row:after {
    clear: both;
    content: '';
    display: table;
}

.status {
    margin-bottom: 10px;
}

.square {
    background: #aaa;
    border: 1px solid #999;
    float: left;
    font-size: 24px;
    font-weight: bold;
    line-height: 34px;
    margin-right: -1px;
    margin-top: -1px;
    padding: 0;
    text-align: center;

}

:root {
    --base-width: 50px;
    --width-role: 70px;
    --width-selected-card: 85px;
    --width-cards-hand: 70px;
    --width-square-actions: 100px;
}

.square-matrix {
    width: 5vw;
    height: 10vw;
    max-width: var(--base-width);
    max-height: calc(var(--base-width) * 2);
}

.square-deck {
    width: 5vw;
    height: 10vw;
    max-width: var(--base-width);
    max-height: calc(var(--base-width) * 2);
}

.square-role {
    width: 10vw;
    height: 20vw;
    max-width: var(--width-role);
    max-height: calc(var(--width-role) * 2);
}

.square-current-card {
    width: 7.5vw;
    height: 15vw;
    max-width: var(--width-selected-card);
    max-height: calc(var(--width-selected-card) * 2);
}
.square-actions{
    width: 10vw;
    height: 20vw;
    max-width: var(--width-square-actions);
    max-height: calc(var(--width-square-actions) * 2);
}
.square-hands {
    width: 10vw;
    height: 20vw;
    max-width: var(--width-cards-hand);
    max-height: calc(var(--width-cards-hand) * 2);
}

.square:focus {
    outline: none;
}

.kbd-navigation .square:focus {
    background: #ddd;
}

.game-info {
    margin-left: 20px;
}

.rotated-image {
    transform: rotate(180deg);
}

.semi-rotated-image {
    transform: rotate(90deg);
}
